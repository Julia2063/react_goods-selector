{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","save","good","setState","this","className","classNames","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,EAKEC,KAAO,SAACC,GACN,IAAQF,EAAiB,EAAKD,MAAtBC,aAER,EAAKG,SAAS,CACZH,aAAcA,IAAiBE,EAAO,GAAKA,KATjD,4CAaE,WAAU,IAAD,OACCF,EAAiBI,KAAKL,MAAtBC,aAER,OACE,uBAAMK,UAAU,oBAAhB,UACE,oBACEA,UACEC,IACE,QACA,CACE,UAA4B,KAAjBN,EACX,wBAA0C,KAAjBA,IANjC,SAWoB,KAAjBA,EACG,oBAEA,qCACGA,EACA,IAFH,cAKE,wBACE,UAAQ,cACRO,KAAK,SACLF,UAAU,cACVG,QAAS,WACP,EAAKP,KAAKD,WAMtB,uBAAOK,UAAU,QAAjB,SACE,gCACGR,EAAMY,KAAI,SAAAP,GAAI,OACb,qBACE,UAAQ,OAERG,UACEC,IAAW,CACT,+BAAgCN,IAAiBE,IALvD,UASE,6BACE,wBACE,UACEF,IAAiBE,EAAO,eAAiB,YAE3CK,KAAK,SACLF,UACEC,IAAW,SAAU,CAAE,UAAWN,IAAiBE,IAErDM,QAAS,WACP,EAAKP,KAAKC,IATd,SAYGF,IAAiBE,EAAO,IAAM,QAInC,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGH,MAzBEA,iBArDrB,GAAyBQ,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6b58fcdd.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  save = (good: string) => {\n    const { selectedGood } = this.state;\n\n    this.setState({\n      selectedGood: selectedGood === good ? '' : good,\n    });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1\n          className={\n            classNames(\n              'title',\n              {\n                'is-flex': selectedGood !== '',\n                'is-align-items-center': selectedGood !== '',\n              },\n            )\n          }\n        >\n          {selectedGood === ''\n            ? 'No goods selected'\n            : (\n              <>\n                {selectedGood }\n                {' '}\n                is selected\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  data-cy=\"ClearButton\"\n                  type=\"button\"\n                  className=\"delete ml-3\"\n                  onClick={() => {\n                    this.save(selectedGood);\n                  }}\n                />\n              </>\n            )}\n        </h1>\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={\n                  classNames({\n                    'has-background-success-light': selectedGood === good,\n                  })\n                }\n              >\n                <td>\n                  <button\n                    data-cy={\n                      selectedGood === good ? 'RemoveButton' : 'AddButton'\n                    }\n                    type=\"button\"\n                    className={\n                      classNames('button', { 'is-info': selectedGood === good })\n                    }\n                    onClick={() => {\n                      this.save(good);\n                    }}\n                  >\n                    {selectedGood === good ? '-' : '+'}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}